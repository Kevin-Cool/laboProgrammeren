// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using programeren_3_eindwerk.Deel2;

namespace programeren_3_eindwerk.Migrations
{
    [DbContext(typeof(ProvinciesContext))]
    [Migration("20200603074202_nieuw7")]
    partial class nieuw7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("programeren_3_eindwerk.classes.Gemeente", b =>
                {
                    b.Property<int>("GemeenteID")
                        .HasColumnType("int");

                    b.Property<string>("GemeenteNaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvincieID")
                        .HasColumnType("int");

                    b.HasKey("GemeenteID");

                    b.HasIndex("ProvincieID");

                    b.ToTable("Gemeenten");
                });

            modelBuilder.Entity("programeren_3_eindwerk.classes.Graaf", b =>
                {
                    b.Property<int>("GraafID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("GraafID");

                    b.ToTable("Grafen");
                });

            modelBuilder.Entity("programeren_3_eindwerk.classes.Knoop", b =>
                {
                    b.Property<int>("KnoopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PuntID")
                        .HasColumnType("int");

                    b.HasKey("KnoopID");

                    b.HasIndex("PuntID");

                    b.ToTable("Knopen");
                });

            modelBuilder.Entity("programeren_3_eindwerk.classes.Provincie", b =>
                {
                    b.Property<int>("ProvincieID")
                        .HasColumnType("int");

                    b.Property<string>("ProvincieNaam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvincieID");

                    b.ToTable("Provincies");
                });

            modelBuilder.Entity("programeren_3_eindwerk.classes.Punt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SegmentID")
                        .HasColumnType("int");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("Y")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("SegmentID");

                    b.ToTable("Puntes");
                });

            modelBuilder.Entity("programeren_3_eindwerk.classes.Segment", b =>
                {
                    b.Property<int>("SegmentID")
                        .HasColumnType("int");

                    b.Property<int?>("BeginknoopKnoopID")
                        .HasColumnType("int");

                    b.Property<int?>("EindknoopKnoopID")
                        .HasColumnType("int");

                    b.Property<int?>("GraafID")
                        .HasColumnType("int");

                    b.HasKey("SegmentID");

                    b.HasIndex("BeginknoopKnoopID");

                    b.HasIndex("EindknoopKnoopID");

                    b.HasIndex("GraafID");

                    b.ToTable("Segmenten");
                });

            modelBuilder.Entity("programeren_3_eindwerk.classes.Straat", b =>
                {
                    b.Property<int>("StraatID")
                        .HasColumnType("int");

                    b.Property<int?>("GemeenteID")
                        .HasColumnType("int");

                    b.Property<int?>("GraafID")
                        .HasColumnType("int");

                    b.Property<string>("Straatnaam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StraatID");

                    b.HasIndex("GemeenteID");

                    b.HasIndex("GraafID");

                    b.ToTable("Straten");
                });

            modelBuilder.Entity("programeren_3_eindwerk.classes.Gemeente", b =>
                {
                    b.HasOne("programeren_3_eindwerk.classes.Provincie", null)
                        .WithMany("Gemeenten")
                        .HasForeignKey("ProvincieID");
                });

            modelBuilder.Entity("programeren_3_eindwerk.classes.Knoop", b =>
                {
                    b.HasOne("programeren_3_eindwerk.classes.Punt", "Punt")
                        .WithMany()
                        .HasForeignKey("PuntID");
                });

            modelBuilder.Entity("programeren_3_eindwerk.classes.Punt", b =>
                {
                    b.HasOne("programeren_3_eindwerk.classes.Segment", null)
                        .WithMany("Vertices")
                        .HasForeignKey("SegmentID");
                });

            modelBuilder.Entity("programeren_3_eindwerk.classes.Segment", b =>
                {
                    b.HasOne("programeren_3_eindwerk.classes.Knoop", "Beginknoop")
                        .WithMany()
                        .HasForeignKey("BeginknoopKnoopID");

                    b.HasOne("programeren_3_eindwerk.classes.Knoop", "Eindknoop")
                        .WithMany()
                        .HasForeignKey("EindknoopKnoopID");

                    b.HasOne("programeren_3_eindwerk.classes.Graaf", null)
                        .WithMany("ListMap")
                        .HasForeignKey("GraafID");
                });

            modelBuilder.Entity("programeren_3_eindwerk.classes.Straat", b =>
                {
                    b.HasOne("programeren_3_eindwerk.classes.Gemeente", null)
                        .WithMany("Straten")
                        .HasForeignKey("GemeenteID");

                    b.HasOne("programeren_3_eindwerk.classes.Graaf", "Graaf")
                        .WithMany()
                        .HasForeignKey("GraafID");
                });
#pragma warning restore 612, 618
        }
    }
}
